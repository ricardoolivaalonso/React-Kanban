{"version":3,"sources":["jsx/03-components/TaskComponent.jsx","jsx/03-components/FormComponent.jsx","jsx/02-sections/LaneSection.jsx","jsx/02-sections/HeaderSection.jsx","jsx/01-pages/KanbanPage.jsx","jsx/App.jsx","index.js","context/initialTasks.js","context/TaskContext.js"],"names":["TaksComponent","task","type","title","useContext","TaskContext","lane","setLanes","changeTask","e","op","currentLane","parseInt","target","id","currentID","currentTarget","value","currentTask","find","t","tasks","otherTask","filter","map","eval","deleteTask","length","className","name","timestamp","onClick","FormComponent","useState","setName","placeholder","autoComplete","onChange","preventDefault","trim","uuid","Date","toDateString","LaneSection","HeaderSection","KanbanPage","App","ReactDOM","render","StrictMode","document","getElementById","initialTasks","createContext","TaskProvider","children","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","Provider"],"mappings":"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","file":"static/js/main.57a29823.chunk.js","sourcesContent":["import { useContext } from \"react\"\r\nimport { TaskContext } from \"../../context/TaskContext\"\r\n\r\nconst TaksComponent = ({ task, type, title }) => {\r\n\r\n\tconst { lane, setLanes } = useContext(TaskContext)\r\n\r\n\tconst changeTask = (e,op) => {\r\n\t\tlet currentLane = parseInt(e.target.id) // Get teh current Lane-ID\r\n\t\tlet currentID = e.currentTarget.value // Get the current Task-ID\r\n\t\tlet currentTask = lane.find( t => t.id === currentLane ).tasks.find( t => t.id === currentID ) // Found the current task\r\n\t\tlet otherTask = lane.find( t => t.id === currentLane ).tasks.filter( t => t.id !== currentID ) // All tasks - current\r\n\t\r\n\t\tsetLanes( lane.map( t => {\r\n\t\t\t\tif (t.id === currentLane) \r\n\t\t\t\t\treturn { ...t, tasks: otherTask } // Delete the task of the current lane\r\n\t\t\t\telse if (t.id === (eval(`${currentLane}${op}1`))) \r\n\t\t\t\t\treturn { ...t, tasks: [ currentTask, ...t.tasks ] } // Add the task to the next/back lane\r\n\t\t\t\treturn t\r\n\t\t\t}\r\n\t\t))\r\n\t}\r\n\r\n\tconst deleteTask = (e) =>{\r\n\t\tlet currentLane = parseInt(e.target.id) // Get teh current Lane-ID\r\n\t\tlet currentID = e.currentTarget.value // Get the current Task-ID\r\n\t\tlet otherTask = lane.find( t => t.id === currentLane ).tasks.filter( t => t.id !== currentID ) // All tasks - current\r\n\r\n\t\tsetLanes( lane.map( t => {\r\n\t\t\t\tif (t.id === currentLane) \r\n\t\t\t\t\treturn { ...t, tasks: otherTask } // Delete the task of the current lane\r\n\t\t\t\treturn t\r\n\t\t\t}\r\n\t\t))\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\ttask.length === 0 ? <p className=\"task__empty\">Nothing to see here...</p> : \r\n\t\t\t\ttask.map( t => (\r\n\t\t\t\t\t\r\n\t\t\t\t\t<article className={`task task--${title}`} key={t.id}> \r\n\t\t\t\t\t\t<p className=\"task__name\">{t.name}</p>\r\n\t\t\t\t\t\t<div className=\"task__info\">\r\n\t\t\t\t\t\t\t<span className=\"task__timestamp\">{t.timestamp}</span>\r\n\t\t\t\t\t\t\t<div className=\"task__buttons\">\r\n\r\n\t\t\t\t\t\t\t\t{ type > 0 && \r\n\t\t\t\t\t\t\t\t\t<button className=\"task__button\" type=\"button\" title=\"Previous Stage\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={t.id} \r\n\t\t\t\t\t\t\t\t\t\tid={type} \r\n\t\t\t\t\t\t\t\t\t\tonClick={(e)=>changeTask(e,'-')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t&#129040;\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{ type < 2 && \r\n\t\t\t\t\t\t\t\t\t<button className=\"task__button\" type=\"button\" title=\"Next Stage\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={t.id} \r\n\t\t\t\t\t\t\t\t\t\tid={type} \r\n\t\t\t\t\t\t\t\t\t\tonClick={(e)=>changeTask(e,'+')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t&#129042;\r\n\t\t\t\t\t\t\t\t\t</button> \r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<button className=\"task__button\" type=\"button\" title=\"Delete Task\"\r\n\t\t\t\t\t\t\t\t\tvalue={t.id} \r\n\t\t\t\t\t\t\t\t\tid={type} \r\n\t\t\t\t\t\t\t\t\tonClick={deleteTask}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t&#215;\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</article>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport { TaksComponent }","import { useContext, useState } from \"react\"\r\nimport { TaskContext } from \"../../context/TaskContext\"\r\nimport uuid from 'react-uuid'\r\n\r\nconst FormComponent = ({id}) => {\r\n\r\n\tconst { lane, setLanes } = useContext(TaskContext)\r\n\tconst [name, setName] = useState('')\r\n\r\n\tconst createTask = (e) => {\r\n\t\te.preventDefault()\r\n\t\tlet currentID = parseInt(e.target.id)\r\n\r\n\t\tif(name.trim().length > 0) {\r\n\t\t\tsetLanes( lane.map( t => {\r\n\t\t\t\t\tif (t.id === currentID) \r\n\t\t\t\t\t\treturn { ...t, tasks:[ {id: uuid(), name: name, timestamp: new Date().toDateString()}, ...t.tasks ] }\r\n\t\t\t\t\treturn t\r\n\t\t\t\t}\r\n\t\t\t))\r\n\t\t\tsetName('')\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<form className=\"form\" >\r\n\t\t\t<input \r\n\t\t\t\tclassName=\"form__input\" \r\n\t\t\t\ttype=\"text\" name=\"task\" \r\n\t\t\t\tplaceholder=\"Add a new task\"\r\n\t\t\t\tautoComplete=\"off\" \r\n\t\t\t\tvalue={ name } \r\n\t\t\t\tonChange={ (e)=>setName(e.target.value) }\r\n\t\t\t/>\r\n\t\t\t<button \r\n\t\t\t\tclassName=\"form__submit\" \r\n\t\t\t\ttype=\"submit\" \r\n\t\t\t\tid={id}\r\n\t\t\t\tonClick={ createTask } \r\n\t\t\t>\r\n\t\t\t\tAdd task\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport { FormComponent }","import { useContext } from \"react\"\r\nimport { TaskContext } from \"../../context/TaskContext\"\r\nimport { TaksComponent } from \"../03-components/TaskComponent\"\r\nimport { FormComponent } from \"../03-components/FormComponent\"\r\n\r\nconst LaneSection = () => {\r\n\tconst { lane }  = useContext( TaskContext )\r\n\t\r\n\treturn(\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tlane.map( t => (\r\n\t\t\t\t\t<div key={t.id}>\r\n\t\t\t\t\t\t<FormComponent id={t.id}></FormComponent>\r\n\t\t\t\t\t\t<article className=\"lane\" >\r\n\t\t\t\t\t\t\t<div className=\"lane__info\">\r\n\t\t\t\t\t\t\t\t<h2 className=\"lane__title\">{t.title}</h2>\r\n\t\t\t\t\t\t\t\t<span className=\"lane__number\">({t.tasks.length})</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"lane__tasks\">\r\n\t\t\t\t\t\t\t\t<TaksComponent task={t.tasks} type={t.id} title={t.title}></TaksComponent>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</>\r\n\t\t\r\n\t)\r\n}\r\n\r\nexport { LaneSection }","const HeaderSection = () => {\r\n\treturn(\r\n\t\t<header className=\"header\">\r\n\t\t\t<h1 className=\"header__title\">Minimal Kanban</h1>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport { HeaderSection }","import { LaneSection } from \"../02-sections/LaneSection\"\r\nimport { HeaderSection } from \"../02-sections/HeaderSection\"\r\n\r\nconst KanbanPage = () => {\r\n\treturn(\r\n\t\t<div className=\"kanban\">\r\n\t\t\t<HeaderSection />\r\n\t\t\t<main className=\"main\">\r\n\t\t\t\t<LaneSection></LaneSection>\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport { KanbanPage }","import { KanbanPage } from \"./01-pages/KanbanPage\"\r\nimport { TaskProvider } from \"../context/TaskContext\"\r\n\r\nconst App = () => {\r\n\treturn(\r\n\t\t<TaskProvider>\r\n\t\t\t<KanbanPage />\r\n\t\t</TaskProvider>\r\n\t)\r\n}\r\n\r\nexport { App }\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './jsx/App'\nimport './scss/styles.scss'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n","import uuid from 'react-uuid'\r\n\r\nconst initialTasks = [\r\n\t{\r\n\t\tid: 0,\r\n\t\ttitle: 'todo',\r\n\t\ttasks: [\r\n\t\t\t{\r\n\t\t\t\tid: uuid(),\r\n\t\t\t\tname: 'Learn about a distributed version control system such as Git',\r\n\t\t\t\ttimestamp: new Date().toDateString()\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tid: 1,\r\n\t\ttitle: 'doing',\r\n\t\ttasks: [\r\n\t\t\t{\r\n\t\t\t\tid: uuid(),\r\n\t\t\t\tname: 'Take a class at your local community center that interests you',\r\n\t\t\t\ttimestamp: new Date().toDateString()\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\ttitle: 'done',\r\n\t\ttasks: [\r\n\t\t\t{\r\n\t\t\t\tid: uuid(),\r\n\t\t\t\tname: 'Fix something that\\'s broken in your house',\r\n\t\t\t\ttimestamp: new Date().toDateString()\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n]\r\n\r\nexport { initialTasks }","import { createContext, useState, useEffect } from 'react'\r\nimport { initialTasks } from './initialTasks'\r\n\r\nconst TaskContext = createContext()\r\n\r\nconst TaskProvider = ({children}) => {\r\n\r\n\tconst tasks = localStorage.getItem('tasks') ? JSON.parse(localStorage.getItem('tasks')) : initialTasks\r\n\tconst [lane, setLanes] = useState(tasks)\r\n\r\n\tuseEffect(()=>{\r\n\t\tlocalStorage.setItem('tasks', JSON.stringify(lane))\r\n\t}, [lane])\r\n\r\n\treturn(\r\n\t\t<TaskContext.Provider value={ {lane, setLanes} }>\r\n\t\t\t{children}\r\n\t\t</TaskContext.Provider>\r\n\t)\r\n}\r\n\r\nexport { TaskContext, TaskProvider }\r\n\r\n"],"sourceRoot":""}